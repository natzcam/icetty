#!/usr/bin/env node

const argv = require("yargs").argv;
const inquirer = require("inquirer")
const os = require("os")
const debug = require("debug")("icetty:service-installer");
const host = require("../lib/host");

(async () => {
  const platform = os.platform()

  let svc
  if (platform === "win32") {

    const answers = await inquirer.prompt([{
      type: "confirm",
      name: "currentUser",
      message: "Run windows service as current user?"
    }, {
      type: "input",
      name: "user",
      message: "Windows User (service will have the same privileges as this user)",
      when: answers => !answers.currentUser,
      validate: (input, answers) => {
        return input ? true : "Windows User is required"
      }
    },
    {
      type: "password",
      name: "password",
      message: "Windows Password",
      when: answers => !answers.currentUser,
      validate: (input, answers) => {
        return input ? true : "Password is required"
      }
    }]);

    const Service = require('node-windows').Service;
    svc = new Service({
      name: "icettyd",
      description: "p2p command line daemon",
      script: require("path").join(__dirname, "icettyd")
    });

    svc.logOnAs.account = answers.user;
    svc.logOnAs.password = answers.password;

  } else if (platform == "darwin" || platform == "linux") {
    let Service;
    if (platform == "darwin") {
      Service = require('node-mac').Service;
    } else {
      Service = require('node-linux').Service;
    }

    const answers = await inquirer.prompt([{
      type: "input",
      name: "user",
      message: "User (service will have the same privileges as this user)",
      validate: (input, answers) => {
        return input ? true : "User is required"
      }
    },
    {
      type: "input",
      name: "group",
      message: "Group",
      validate: (input, answers) => {
        return input ? true : "Group is required"
      }
    }]);

    svc = new Service({
      name: "icettyd",
      description: "p2p command line daemon",
      script: require("path").join(__dirname, "icettyd"),
      user: answers.user,
      group: answers.group
    });
  } else {
    throw new Error('Platform not supported')
  }

  await host.cleanup();
  await host.setup();

  svc.on("install", async function () {
    svc.start();
    console.log("Starting icettyd");
  });

  svc.on("start", async function () {
    console.log("icettyd started");
  });


  svc.on("alreadyinstalled ", function () {
    console.log("Already installed!");
  });

  svc.install();
})();
